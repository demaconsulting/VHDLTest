on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      version:
        required: true
        type: string

jobs:
  build:

    runs-on: ${{ inputs.os }}

    steps:

    - uses: actions/checkout@v4

    - name: Setup dotnet 6/8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.x
          8.x

    - uses: nuget/setup-nuget@v2
      with:
        nuget-version: '6.x'

    - name: Restore Tools
      run: >
        dotnet tool restore

    - name: Restore Dependencies
      run: > 
        dotnet restore
      
    - name: Start Sonar Scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: >
        dotnet dotnet-sonarscanner
        begin
        /k:"demaconsulting_VHDLTest"
        /o:"demaconsulting"
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
        /d:sonar.host.url="https://sonarcloud.io"

    - name: Build
      run: >
        dotnet build
        --no-restore
        --configuration Release
        --property:Version=${{ inputs.version }}

    - name: Test
      run: >
        dotnet test
        --no-build
        --configuration Release
        --property:Version=${{ inputs.version }}
        --collect "Code Coverage"

    - name: End Sonar Scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: >
        dotnet dotnet-sonarscanner
        end
        /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: Generate Tool SBOM
      run: >
        dotnet sbom-tool generate
        -b src/DEMAConsulting.VHDLTest/bin/Release
        -bc src/DEMAConsulting.VHDLTest
        -pn DemaConsulting.VHDLTest
        -pv ${{ inputs.version }}
        -ps DEMAConsulting
        -nsb https://DemaConsulting.com/VHDLTest
        -pm true
        -li true

    - name: Run SBOM Workflow
      run: >
        dotnet spdx-tool
        run-workflow
        spdx-workflow.yaml

    - name: Create Dotnet Tool
      run: >
        dotnet pack
        --no-build
        --no-restore
        --property:PackageVersion=${{ inputs.version }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: artifacts-${{ inputs.os }}
        path: |
          **/*.nupkg
          **/*.snupkg
          **/manifest.spdx.json
          **/manifest.spdx.json.sha256
          *summary.md
